{"code":"// 添加一个实现类来创建NFCResult\nexport class NFCResultImpl {\n    constructor(messages) {\n        this.messages = messages;\n    }\n}\n// 添加一个实现类来创建NFCMessage\nexport class NFCMessageImpl {\n    constructor(records) {\n        this.records = records;\n    }\n}\n// 添加一个实现类来创建NFCRecord\nexport class NFCRecordImpl {\n    constructor(typeNameFormat = null, type = null, identifier = null, payload = null) {\n        this.typeNameFormat = typeNameFormat;\n        this.type = type;\n        this.identifier = identifier;\n        this.payload = payload;\n    }\n}\nexport class NFCAdapter {\n    // 检查NFC是否可用\n    static isAvailable() {\n        // 简化实现，假设支持NFC\n        return true;\n    }\n    // 开始扫描NFC标签\n    static startScan(successCallback, errorCallback) {\n        // 保存回调\n        this.successCallback = successCallback;\n        this.errorCallback = errorCallback;\n        try {\n            // 显示提示\n            uni.showToast({\n                title: \"请将NFC标签靠近手机背面\",\n                icon: \"none\",\n                duration: 2000\n            });\n            // 模拟延迟后返回结果\n            setTimeout(() => {\n                if (this.successCallback != null) {\n                    // 使用实现类创建模拟NFC数据\n                    const record = new NFCRecordImpl(1, \"Text\", \"id:1\", \"这是一条模拟的NFC标签信息\");\n                    const message = new NFCMessageImpl([record]);\n                    const mockResult = new NFCResultImpl([message]);\n                    this.successCallback(mockResult);\n                }\n            }, 2000);\n        }\n        catch (error) {\n            if (this.errorCallback != null) {\n                // 使用!运算符解包可选类型\n                this.errorCallback(\"NFC扫描失败: \" + String(error));\n            }\n        }\n    }\n    // 停止扫描\n    static stopScan() {\n        // 清空回调\n        this.successCallback = null;\n        this.errorCallback = null;\n    }\n}\n// 存储成功和错误回调\nNFCAdapter.successCallback = null;\nNFCAdapter.errorCallback = null;\n// 检查NFC是否可用的简化函数\nexport function isAvailable() {\n    return NFCAdapter.isAvailable();\n}\n//# sourceMappingURL=/Users/chenyonglin/myCode/gitee/myWork/NFC_Reading/uni_modules/nfc-module/utssdk/nfc.uts.js.map","references":[],"uniExtApis":["uni.showToast"],"map":"{\"version\":3,\"file\":\"nfc.uts.js\",\"sourceRoot\":\"\",\"sources\":[\"nfc.uts\"],\"names\":[],\"mappings\":\"AAoBA,sBAAsB;AACtB,MAAM,OAAO,aAAa;IACxB,YAAmB,QAAsB;QAAtB,aAAQ,GAAR,QAAQ,CAAc;IAAG,CAAC;CAC9C;AAED,uBAAuB;AACvB,MAAM,OAAO,cAAc;IACzB,YAAmB,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;IAAG,CAAC;CAC5C;AAED,sBAAsB;AACtB,MAAM,OAAO,aAAa;IACxB,YACS,qBAAuB,EACvB,WAAa,EACb,iBAAmB,EACnB,cAAgB;QAHhB,mBAAc,GAAd,cAAc,CAAS;QACvB,SAAI,GAAJ,IAAI,CAAS;QACb,eAAU,GAAV,UAAU,CAAS;QACnB,YAAO,GAAP,OAAO,CAAS;IACtB,CAAC;CACL;AAED,MAAM,OAAO,UAAU;IAKrB,YAAY;IACZ,MAAM,CAAC,WAAW;QAChB,eAAe;QACf,OAAO,IAAI,CAAA;IACb,CAAC;IAED,YAAY;IACZ,MAAM,CAAC,SAAS,CACd,eAA4C,EAC5C,aAAsC;QAEtC,OAAO;QACP,IAAI,CAAC,eAAe,GAAG,eAAe,CAAA;QACtC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAA;QAElC,IAAI;YACF,OAAO;YACP,GAAG,CAAC,SAAS,CAAC;gBACZ,KAAK,EAAE,eAAe;gBACtB,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE,IAAI;aACf,CAAC,CAAA;YAEF,YAAY;YACZ,UAAU,CAAC;gBACT,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,EAAE;oBAChC,iBAAiB;oBACjB,MAAM,MAAM,GAAG,IAAI,aAAa,CAC9B,CAAC,EACD,MAAM,EACN,MAAM,EACN,gBAAgB,CACjB,CAAA;oBACD,MAAM,OAAO,GAAG,IAAI,cAAc,CAAC,CAAC,MAAM,CAAC,CAAC,CAAA;oBAC5C,MAAM,UAAU,GAAG,IAAI,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,CAAA;oBAE/C,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAA;iBACjC;YACH,CAAC,EAAE,IAAI,CAAC,CAAA;SACT;QAAC,OAAO,KAAK,EAAE;YACd,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,EAAE;gBAC9B,eAAe;gBACf,IAAI,CAAC,aAAc,CAAC,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA;aACjD;SACF;IACH,CAAC;IAED,OAAO;IACP,MAAM,CAAC,QAAQ;QACb,OAAO;QACP,IAAI,CAAC,eAAe,GAAG,IAAI,CAAA;QAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAA;IAC3B,CAAC;;AAxDD,YAAY;AACG,0BAAe,GAAyC,IAAI,CAAA;AAC5D,wBAAa,GAAqC,IAAI,CAAA;AAyDvE,iBAAiB;AACjB,MAAM,UAAU,WAAW;IACzB,OAAO,UAAU,CAAC,WAAW,EAAE,CAAA;AACjC,CAAC\"}"}
