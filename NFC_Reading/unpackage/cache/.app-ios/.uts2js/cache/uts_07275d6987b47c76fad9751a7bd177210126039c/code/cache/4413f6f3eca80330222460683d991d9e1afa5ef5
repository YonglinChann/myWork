{"code":"import { defineComponent } from \"vue\";\n// 导入NFC模块\nimport { isAvailable, NFCAdapter } from '@/uni_modules/nfc-module/utssdk';\nexport default defineComponent({\n    data() {\n        return {\n            scanResult: '',\n            isScanning: false // 是否正在扫描\n        };\n    },\n    onLoad() {\n        // 检查设备是否支持NFC\n        this.checkNFCAvailability();\n    },\n    methods: {\n        // 检查NFC是否可用\n        checkNFCAvailability() {\n            try {\n                // 检查NFC是否可用\n                const isNFCAvailable = isAvailable();\n                if (!isNFCAvailable) {\n                    uni.showToast({\n                        title: '您的设备不支持NFC功能或NFC功能未开启',\n                        icon: 'none',\n                        duration: 3000\n                    });\n                }\n                else {\n                    uni.__log__('log', 'at pages/index/index.uvue:45', 'NFC功能可用');\n                }\n            }\n            catch (error) {\n                uni.showToast({\n                    title: '检测NFC可用性失败: ' + String(error),\n                    icon: 'none',\n                    duration: 3000\n                });\n                uni.__log__('error', 'at pages/index/index.uvue:53', '检测NFC可用性失败:', error);\n            }\n        },\n        // 开始NFC扫描\n        startNFCScan() {\n            if (this.isScanning) {\n                uni.showToast({\n                    title: '正在扫描中，请稍候',\n                    icon: 'none'\n                });\n                return null;\n            }\n            try {\n                // 清空之前的结果\n                this.scanResult = '';\n                this.isScanning = true;\n                // 创建一个NFC扫描会话并启动\n                NFCAdapter.startScan(\n                // 成功回调\n                (result) => {\n                    this.isScanning = false;\n                    if (result && result.messages && result.messages.length > 0) {\n                        let scanResult = '';\n                        // 处理扫描到的NDEF信息\n                        result.messages.forEach((message, index) => {\n                            scanResult += `消息 ${index + 1}:\\n`;\n                            if (message.records && message.records.length > 0) {\n                                message.records.forEach((record, recordIndex) => {\n                                    scanResult += `记录 ${recordIndex + 1}:\\n`;\n                                    // 类型格式\n                                    if (record.typeNameFormat !== undefined) {\n                                        scanResult += `类型格式: ${this.getTypeNameFormatString(record.typeNameFormat)}\\n`;\n                                    }\n                                    // 类型\n                                    if (record.type) {\n                                        scanResult += `类型: ${record.type}\\n`;\n                                    }\n                                    // 标识符\n                                    if (record.identifier) {\n                                        scanResult += `标识符: ${record.identifier}\\n`;\n                                    }\n                                    // 载荷\n                                    if (record.payload) {\n                                        scanResult += `载荷: ${record.payload}\\n`;\n                                    }\n                                    scanResult += '\\n';\n                                });\n                            }\n                            else {\n                                scanResult += '没有记录\\n';\n                            }\n                            scanResult += '\\n';\n                        });\n                        this.scanResult = scanResult;\n                    }\n                    else {\n                        this.scanResult = '未检测到NDEF数据';\n                    }\n                }, \n                // 错误回调\n                (error) => {\n                    this.isScanning = false;\n                    this.scanResult = '扫描错误: ' + error;\n                    uni.__log__('error', 'at pages/index/index.uvue:126', 'NFC扫描错误:', error);\n                });\n            }\n            catch (error) {\n                this.isScanning = false;\n                uni.showToast({\n                    title: '启动NFC扫描失败: ' + String(error),\n                    icon: 'none'\n                });\n                uni.__log__('error', 'at pages/index/index.uvue:135', '启动NFC扫描失败:', error);\n            }\n        },\n        // 辅助方法: 将TNF值转换为可读字符串\n        getTypeNameFormatString(tnf = null) {\n            const tnfMap = new UTSJSONObject({\n                0: '空',\n                1: 'NFC论坛类型',\n                2: '媒体类型',\n                3: '绝对URI',\n                4: 'NFC论坛外部类型',\n                5: '未知',\n                6: '不变',\n                7: '保留'\n            });\n            return tnfMap[tnf] || '未知类型';\n        }\n    }\n});\n//# sourceMappingURL=/Users/chenyonglin/myCode/gitee/myWork/NFC_Reading/pages/index/index.uvue?vue&type=script&lang.uts.js.map","references":["/Users/chenyonglin/myCode/gitee/myWork/NFC_Reading/uni_modules/nfc-module/utssdk/index.uts"],"uniExtApis":["uni.showToast","uni.__log__"],"map":"{\"version\":3,\"file\":\"index.uvue?vue&type=script&lang.uts.js\",\"sourceRoot\":\"\",\"sources\":[\"index.uvue?vue&type=script&lang.uts\"],\"names\":[],\"mappings\":\";AACA,UAAU;AACV,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,iCAAiC,CAAA;AAEzE,+BAAe;IACb,IAAI;QACF,OAAO;YACL,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,KAAK,CAAC,SAAS;SAC5B,CAAA;IACH,CAAC;IACD,MAAM;QACJ,cAAc;QACd,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IACD,OAAO,EAAE;QACP,YAAY;QACZ,oBAAoB;YAClB,IAAI;gBACF,YAAY;gBACZ,MAAM,cAAc,GAAG,WAAW,EAAE,CAAC;gBAErC,IAAI,CAAC,cAAc,EAAE;oBACnB,GAAG,CAAC,SAAS,CAAC;wBACZ,KAAK,EAAE,uBAAuB;wBAC9B,IAAI,EAAE,MAAM;wBACZ,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC;iBACJ;qBAAM;oBACL,GAAG,CAAC,OAAO,CAAC,KAAK,EAAC,8BAA8B,EAAC,SAAS,CAAC,CAAC;iBAC7D;aACF;YAAC,OAAO,KAAK,EAAE;gBACd,GAAG,CAAC,SAAS,CAAC;oBACZ,KAAK,EAAE,cAAc,GAAG,MAAM,CAAC,KAAK,CAAC;oBACrC,IAAI,EAAE,MAAM;oBACZ,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;gBACH,GAAG,CAAC,OAAO,CAAC,OAAO,EAAC,8BAA8B,EAAC,aAAa,EAAE,KAAK,CAAC,CAAC;aAC1E;QACH,CAAC;QAED,UAAU;QACV,YAAY;YACV,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,GAAG,CAAC,SAAS,CAAC;oBACZ,KAAK,EAAE,WAAW;oBAClB,IAAI,EAAE,MAAM;iBACb,CAAC,CAAC;gBACH,YAAO;aACR;YAED,IAAI;gBACF,UAAU;gBACV,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBAEvB,iBAAiB;gBACjB,UAAU,CAAC,SAAS;gBAClB,OAAO;gBACP,CAAC,MAAM;oBACL,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,IAAI,MAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC3D,IAAI,UAAU,GAAG,EAAE,CAAC;wBAEpB,eAAe;wBACf,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK;4BACrC,UAAU,IAAI,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC;4BAEnC,IAAI,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gCACjD,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,WAAW;oCAC1C,UAAU,IAAI,MAAM,WAAW,GAAG,CAAC,KAAK,CAAC;oCAEzC,OAAO;oCACP,IAAI,MAAM,CAAC,cAAc,KAAK,SAAS,EAAE;wCACvC,UAAU,IAAI,SAAS,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC;qCAChF;oCAED,KAAK;oCACL,IAAI,MAAM,CAAC,IAAI,EAAE;wCACf,UAAU,IAAI,OAAO,MAAM,CAAC,IAAI,IAAI,CAAC;qCACtC;oCAED,MAAM;oCACN,IAAI,MAAM,CAAC,UAAU,EAAE;wCACrB,UAAU,IAAI,QAAQ,MAAM,CAAC,UAAU,IAAI,CAAC;qCAC7C;oCAED,KAAK;oCACL,IAAI,MAAM,CAAC,OAAO,EAAE;wCAClB,UAAU,IAAI,OAAO,MAAM,CAAC,OAAO,IAAI,CAAC;qCACzC;oCAED,UAAU,IAAI,IAAI,CAAC;gCACrB,CAAC,CAAC,CAAC;6BACJ;iCAAM;gCACL,UAAU,IAAI,QAAQ,CAAC;6BACxB;4BAED,UAAU,IAAI,IAAI,CAAC;wBACrB,CAAC,CAAC,CAAC;wBAEH,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;qBAC9B;yBAAM;wBACL,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;qBAChC;gBACH,CAAC;gBACD,OAAO;gBACP,CAAC,KAAK;oBACJ,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,IAAI,CAAC,UAAU,GAAG,QAAQ,GAAG,KAAK,CAAC;oBACnC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAC,+BAA+B,EAAC,UAAU,EAAE,KAAK,CAAC,CAAC;gBACzE,CAAC,CACF,CAAC;aACH;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,GAAG,CAAC,SAAS,CAAC;oBACZ,KAAK,EAAE,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC;oBACpC,IAAI,EAAE,MAAM;iBACb,CAAC,CAAC;gBACH,GAAG,CAAC,OAAO,CAAC,OAAO,EAAC,+BAA+B,EAAC,YAAY,EAAE,KAAK,CAAC,CAAC;aAC1E;QACH,CAAC;QAED,sBAAsB;QACtB,uBAAuB,CAAC,GAAG,OAAA;YACzB,MAAM,MAAM,qBAAG;gBACb,CAAC,EAAE,GAAG;gBACN,CAAC,EAAE,SAAS;gBACZ,CAAC,EAAE,MAAM;gBACT,CAAC,EAAE,OAAO;gBACV,CAAC,EAAE,WAAW;gBACd,CAAC,EAAE,IAAI;gBACP,CAAC,EAAE,IAAI;gBACP,CAAC,EAAE,IAAI;aACR,CAAA,CAAC;YAEF,OAAO,MAAM,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC;QAC/B,CAAC;KACF;CACF,EAAA\"}"}
