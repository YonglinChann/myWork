{"version":3,"file":"app-service.js","sources":["../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli-vite/node_modules/@dcloudio/uni-console/dist/app.esm.js","uni_modules/nfc-module/utssdk/nfc.uts","pages/index/index.uvue","App.uvue"],"sourcesContent":["/// <reference types=\"@dcloudio/uni-app-x/types/uni/global\" />\n// 之所以又写了一份，是因为外层的socket，connectSocket的时候必须传入multiple:true\n// 但是android又不能传入，目前代码里又不能写条件编译之类的。\nfunction initRuntimeSocket(hosts, port, id) {\n    if (hosts == '' || port == '' || id == '')\n        return Promise.resolve(null);\n    return hosts\n        .split(',')\n        .reduce((promise, host) => {\n        return promise.then((socket) => {\n            if (socket != null)\n                return Promise.resolve(socket);\n            return tryConnectSocket(host, port, id);\n        });\n    }, Promise.resolve(null));\n}\nconst SOCKET_TIMEOUT = 500;\nfunction tryConnectSocket(host, port, id) {\n    return new Promise((resolve, reject) => {\n        const socket = uni.connectSocket({\n            url: `ws://${host}:${port}/${id}`,\n            fail() {\n                resolve(null);\n            },\n        });\n        const timer = setTimeout(() => {\n            // @ts-expect-error\n            socket.close({\n                code: 1006,\n                reason: 'connect timeout',\n            });\n            resolve(null);\n        }, SOCKET_TIMEOUT);\n        socket.onOpen((e) => {\n            clearTimeout(timer);\n            resolve(socket);\n        });\n        socket.onClose((e) => {\n            clearTimeout(timer);\n            resolve(null);\n        });\n        socket.onError((e) => {\n            clearTimeout(timer);\n            resolve(null);\n        });\n    });\n}\n\nfunction initRuntimeSocketService() {\n    const hosts = process.env.UNI_SOCKET_HOSTS;\n    const port = process.env.UNI_SOCKET_PORT;\n    const id = process.env.UNI_SOCKET_ID;\n    if (hosts == '' || port == '' || id == '')\n        return Promise.resolve(false);\n    let socketTask = null;\n    __registerWebViewUniConsole(() => {\n        return \"!function(){\\\"use strict\\\";function e(e,t){try{return{type:e,args:n(t)}}catch(e){}return{type:e,args:[]}}function n(e){return e.map((function(e){return t(e)}))}function t(e,n){if(void 0===n&&(n=0),n>=7)return{type:\\\"object\\\",value:\\\"[Maximum depth reached]\\\"};switch(typeof e){case\\\"string\\\":return{type:\\\"string\\\",value:e};case\\\"number\\\":return function(e){return{type:\\\"number\\\",value:String(e)}}(e);case\\\"boolean\\\":return function(e){return{type:\\\"boolean\\\",value:String(e)}}(e);case\\\"object\\\":return function(e,n){if(null===e)return{type:\\\"null\\\"};if(function(e){return e.$&&r(e.$)}(e))return function(e,n){return{type:\\\"object\\\",className:\\\"ComponentPublicInstance\\\",value:{properties:Object.entries(e.$.type).map((function(e){return o(e[0],e[1],n+1)}))}}}(e,n);if(r(e))return function(e,n){return{type:\\\"object\\\",className:\\\"ComponentInternalInstance\\\",value:{properties:Object.entries(e.type).map((function(e){return o(e[0],e[1],n+1)}))}}}(e,n);if(function(e){return e.style&&null!=e.tagName&&null!=e.nodeName}(e))return function(e,n){return{type:\\\"object\\\",value:{properties:Object.entries(e).filter((function(e){var n=e[0];return[\\\"id\\\",\\\"tagName\\\",\\\"nodeName\\\",\\\"dataset\\\",\\\"offsetTop\\\",\\\"offsetLeft\\\",\\\"style\\\"].includes(n)})).map((function(e){return o(e[0],e[1],n+1)}))}}}(e,n);if(function(e){return\\\"function\\\"==typeof e.getPropertyValue&&\\\"function\\\"==typeof e.setProperty&&e.$styles}(e))return function(e,n){return{type:\\\"object\\\",value:{properties:Object.entries(e.$styles).map((function(e){return o(e[0],e[1],n+1)}))}}}(e,n);if(Array.isArray(e))return{type:\\\"object\\\",subType:\\\"array\\\",value:{properties:e.map((function(e,r){return function(e,n,r){var o=t(e,r);return o.name=\\\"\\\".concat(n),o}(e,r,n+1)}))}};if(e instanceof Set)return{type:\\\"object\\\",subType:\\\"set\\\",className:\\\"Set\\\",description:\\\"Set(\\\".concat(e.size,\\\")\\\"),value:{entries:Array.from(e).map((function(e){return function(e,n){return{value:t(e,n)}}(e,n+1)}))}};if(e instanceof Map)return{type:\\\"object\\\",subType:\\\"map\\\",className:\\\"Map\\\",description:\\\"Map(\\\".concat(e.size,\\\")\\\"),value:{entries:Array.from(e.entries()).map((function(e){return function(e,n){return{key:t(e[0],n),value:t(e[1],n)}}(e,n+1)}))}};if(e instanceof Promise)return{type:\\\"object\\\",subType:\\\"promise\\\",value:{properties:[]}};if(e instanceof RegExp)return{type:\\\"object\\\",subType:\\\"regexp\\\",value:String(e),className:\\\"Regexp\\\"};if(e instanceof Date)return{type:\\\"object\\\",subType:\\\"date\\\",value:String(e),className:\\\"Date\\\"};if(e instanceof Error)return{type:\\\"object\\\",subType:\\\"error\\\",value:e.message||String(e),className:e.name||\\\"Error\\\"};var a=void 0,i=e.constructor;i&&i.get$UTSMetadata$&&(a=i.get$UTSMetadata$().name);return{type:\\\"object\\\",className:a,value:{properties:Object.entries(e).map((function(e){return o(e[0],e[1],n+1)}))}}}(e,n);case\\\"undefined\\\":return{type:\\\"undefined\\\"};case\\\"function\\\":return function(e){return{type:\\\"function\\\",value:\\\"function \\\".concat(e.name,\\\"() {}\\\")}}(e);case\\\"symbol\\\":return function(e){return{type:\\\"symbol\\\",value:e.description}}(e);case\\\"bigint\\\":return function(e){return{type:\\\"bigint\\\",value:String(e)}}(e)}}function r(e){return e.type&&null!=e.uid&&e.appContext}function o(e,n,r){var o=t(n,r);return o.name=e,o}\\\"function\\\"==typeof SuppressedError&&SuppressedError;var a=[\\\"log\\\",\\\"warn\\\",\\\"error\\\",\\\"info\\\",\\\"debug\\\"],i=null,u=[],c={};function s(e){null!=i?i(JSON.stringify(Object.assign({type:\\\"console\\\",data:e},c))):u.push.apply(u,e)}var f=a.reduce((function(e,n){return e[n]=console[n].bind(console),e}),{}),p=/^\\\\s*at\\\\s+[\\\\w/./-]+:\\\\d+$/;function l(){function n(n){return function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];var o=function(e,n,t){if(t||2===arguments.length)for(var r,o=0,a=n.length;o<a;o++)!r&&o in n||(r||(r=Array.prototype.slice.call(n,0,o)),r[o]=n[o]);return e.concat(r||Array.prototype.slice.call(n))}([],t,!0);if(o.length){var a=o[o.length-1];\\\"string\\\"==typeof a&&p.test(a)&&o.pop()}f[n].apply(f,o),s([e(n,t)])}}return function(){var e=console.log,n=Symbol();try{console.log=n}catch(e){return!1}var t=console.log===n;return console.log=e,t}()?(a.forEach((function(e){console[e]=n(e)})),function(){a.forEach((function(e){console[e]=f[e]}))}):function(){}}var y=null,g=new Set,d={};function v(e){if(null!=y){var n=e.map((function(e){var n=e&&\\\"promise\\\"in e&&\\\"reason\\\"in e,t=n?\\\"UnhandledPromiseRejection: \\\":\\\"\\\";if(n&&(e=e.reason),e instanceof Error&&e.stack)return e.message&&!e.stack.includes(e.message)?\\\"\\\".concat(t).concat(e.message,\\\"\\\\n\\\").concat(e.stack):\\\"\\\".concat(t).concat(e.stack);if(\\\"object\\\"==typeof e&&null!==e)try{return t+JSON.stringify(e)}catch(e){return t+String(e)}return t+String(e)})).filter(Boolean);n.length>0&&y(JSON.stringify(Object.assign({type:\\\"error\\\",data:n},d)))}else e.forEach((function(e){g.add(e)}))}function m(e){var n={type:\\\"WEB_INVOKE_APPSERVICE\\\",args:{data:{name:\\\"console\\\",arg:e}}};return window.__uniapp_x_postMessageToService?window.__uniapp_x_postMessageToService(n):window.__uniapp_x_.postMessageToService(JSON.stringify(n))}!function(){if(!window.__UNI_CONSOLE_WEBVIEW__){window.__UNI_CONSOLE_WEBVIEW__=!0;var e=\\\"[web-view]\\\".concat(window.__UNI_PAGE_ROUTE__?\\\"[\\\".concat(window.__UNI_PAGE_ROUTE__,\\\"]\\\"):\\\"\\\");l(),function(e,n){if(void 0===n&&(n={}),i=e,Object.assign(c,n),null!=e&&u.length>0){var t=u.slice();u.length=0,s(t)}}((function(e){m(e)}),{channel:e}),function(e,n){if(void 0===n&&(n={}),y=e,Object.assign(d,n),null!=e&&g.size>0){var t=Array.from(g);g.clear(),v(t)}}((function(e){m(e)}),{channel:e}),window.addEventListener(\\\"error\\\",(function(e){v([e.error])})),window.addEventListener(\\\"unhandledrejection\\\",(function(e){v([e])}))}}()}();\";\n    }, (data) => {\n        socketTask === null || socketTask === void 0 ? void 0 : socketTask.send({\n            data,\n        });\n    });\n    return Promise.resolve()\n        .then(() => {\n        return initRuntimeSocket(hosts, port, id).then((socket) => {\n            if (socket == null) {\n                return false;\n            }\n            socketTask = socket;\n            return true;\n        });\n    })\n        .catch(() => {\n        return false;\n    });\n}\ninitRuntimeSocketService();\n\nexport { initRuntimeSocketService };\n","// NFC模块 - 完整实现\n\n// NFC检测结果接口\nexport interface NFCResult {\n  messages: NFCMessage[]\n}\n\n// NFC消息接口\nexport interface NFCMessage {\n  records: NFCRecord[]\n}\n\n// NFC记录接口\nexport interface NFCRecord {\n  typeNameFormat?: number\n  type?: string\n  identifier?: string\n  payload?: string\n}\n\n// 添加一个实现类来创建NFCResult\nexport class NFCResultImpl implements NFCResult {\n  constructor(public messages: NFCMessage[]) {}\n}\n\n// 添加一个实现类来创建NFCMessage\nexport class NFCMessageImpl implements NFCMessage {\n  constructor(public records: NFCRecord[]) {}\n}\n\n// 添加一个实现类来创建NFCRecord\nexport class NFCRecordImpl implements NFCRecord {\n  constructor(\n    public typeNameFormat?: number,\n    public type?: string,\n    public identifier?: string,\n    public payload?: string\n  ) {}\n}\n\nexport class NFCAdapter {\n  // 存储成功和错误回调\n  private static successCallback: ((result: NFCResult) => void) | null = null\n  private static errorCallback: ((error: string) => void) | null = null\n  \n  // 检查NFC是否可用\n  static isAvailable(): boolean {\n    // 简化实现，假设支持NFC\n    return true\n  }\n  \n  // 开始扫描NFC标签\n  static startScan(\n    successCallback: (result: NFCResult) => void,\n    errorCallback: (error: string) => void\n  ): void {\n    this.successCallback = successCallback\n    this.errorCallback = errorCallback\n    \n    // #ifdef APP-PLUS\n    // #ifdef IOS\n    try {\n      // 调用 iOS 原生 NFC 能力\n      // @ts-ignore\n      plus.ios.importClass(\"NFCNDEFReaderSession\")\n      // 这里只做伪代码演示，实际需用 uni-app x 的 UTS 原生桥接能力调用 iOS NFC API\n      // 伪代码如下：\n      uni.requireNativePlugin('NFCPlugin').startSession({\n        onSuccess: (payload: string) => {\n          const record = new NFCRecordImpl(1, \"Text\", \"id:1\", payload)\n          const message = new NFCMessageImpl([record])\n          const result = new NFCResultImpl([message])\n          if (this.successCallback) this.successCallback(result)\n        },\n        onError: (err: string) => {\n          if (this.errorCallback) this.errorCallback(\"NFC扫描失败: \" + err)\n        }\n      })\n    } catch (error) {\n      if (this.errorCallback) {\n        this.errorCallback(\"NFC扫描失败: \" + String(error))\n      }\n    }\n    // #else\n    // 非 iOS 平台依然用模拟逻辑\n    try {\n      uni.showToast({\n        title: \"请将NFC标签靠近手机背面\",\n        icon: \"none\",\n        duration: 2000\n      })\n      setTimeout(() => {\n        if (this.successCallback != null) {\n          const record = new NFCRecordImpl(\n            1,\n            \"Text\",\n            \"id:1\",\n            \"这是一条模拟的NFC标签信息\"\n          )\n          const message = new NFCMessageImpl([record])\n          const mockResult = new NFCResultImpl([message])\n          this.successCallback(mockResult)\n        }\n      }, 2000)\n    } catch (error) {\n      if (this.errorCallback != null) {\n        this.errorCallback!(\"NFC扫描失败: \" + String(error))\n      }\n    }\n    // #endif\n    // #endif\n  }\n  \n  // 停止扫描\n  static stopScan(): void {\n    // 清空回调\n    this.successCallback = null\n    this.errorCallback = null\n  }\n}\n\n// 检查NFC是否可用的简化函数\nexport function isAvailable(): boolean {\n  return NFCAdapter.isAvailable()\n}","<template>\n  <view class=\"container\">\n    <text class=\"title\">NFC 标签读取应用</text>\n    \n    <button class=\"scan-btn\" @click=\"startNFCScan\">开始扫描 NFC 标签</button>\n    \n    <view class=\"result-area\" v-if=\"scanResult\">\n      <text class=\"result-title\">扫描结果:</text>\n      <scroll-view class=\"result-content\">\n        <text>{{ scanResult }}</text>\n      </scroll-view>\n    </view>\n  </view>\n</template>\n\n<script lang=\"uts\">\n// 导入NFC模块\nimport { isAvailable, NFCAdapter } from '@/uni_modules/nfc-module/utssdk'\n\nexport default {\n  data() {\n    return {\n      scanResult: '', // 扫描结果\n      isScanning: false // 是否正在扫描\n    }\n  },\n  onLoad() {\n    // 检查设备是否支持NFC\n    this.checkNFCAvailability();\n  },\n  methods: {\n    // 检查NFC是否可用\n    checkNFCAvailability() {\n      try {\n        // 检查NFC是否可用\n        const isNFCAvailable = isAvailable();\n        \n        if (!isNFCAvailable) {\n          uni.showToast({\n            title: '您的设备不支持NFC功能或NFC功能未开启',\n            icon: 'none',\n            duration: 3000\n          });\n        } else {\n          uni.__log__('log','at pages/index/index.uvue:45','NFC功能可用');\n        }\n      } catch (error) {\n        uni.showToast({\n          title: '检测NFC可用性失败: ' + String(error),\n          icon: 'none',\n          duration: 3000\n        });\n        uni.__log__('error','at pages/index/index.uvue:53','检测NFC可用性失败:', error);\n      }\n    },\n    \n    // 开始NFC扫描\n    startNFCScan() {\n      if (this.isScanning) {\n        uni.showToast({\n          title: '正在扫描中，请稍候',\n          icon: 'none'\n        });\n        return;\n      }\n      \n      try {\n        // 清空之前的结果\n        this.scanResult = '';\n        this.isScanning = true;\n        \n        // 创建一个NFC扫描会话并启动\n        NFCAdapter.startScan(\n          // 成功回调\n          (result) => {\n            this.isScanning = false;\n            if (result && result.messages && result.messages.length > 0) {\n              let scanResult = '';\n              \n              // 处理扫描到的NDEF信息\n              result.messages.forEach((message, index) => {\n                scanResult += `消息 ${index + 1}:\\n`;\n                \n                if (message.records && message.records.length > 0) {\n                  message.records.forEach((record, recordIndex) => {\n                    scanResult += `记录 ${recordIndex + 1}:\\n`;\n                    \n                    // 类型格式\n                    if (record.typeNameFormat !== undefined) {\n                      scanResult += `类型格式: ${this.getTypeNameFormatString(record.typeNameFormat)}\\n`;\n                    }\n                    \n                    // 类型\n                    if (record.type) {\n                      scanResult += `类型: ${record.type}\\n`;\n                    }\n                    \n                    // 标识符\n                    if (record.identifier) {\n                      scanResult += `标识符: ${record.identifier}\\n`;\n                    }\n                    \n                    // 载荷\n                    if (record.payload) {\n                      scanResult += `载荷: ${record.payload}\\n`;\n                    }\n                    \n                    scanResult += '\\n';\n                  });\n                } else {\n                  scanResult += '没有记录\\n';\n                }\n                \n                scanResult += '\\n';\n              });\n              \n              this.scanResult = scanResult;\n            } else {\n              this.scanResult = '未检测到NDEF数据';\n            }\n          },\n          // 错误回调\n          (error) => {\n            this.isScanning = false;\n            this.scanResult = '扫描错误: ' + error;\n            uni.__log__('error','at pages/index/index.uvue:126','NFC扫描错误:', error);\n          }\n        );\n      } catch (error) {\n        this.isScanning = false;\n        uni.showToast({\n          title: '启动NFC扫描失败: ' + String(error),\n          icon: 'none'\n        });\n        uni.__log__('error','at pages/index/index.uvue:135','启动NFC扫描失败:', error);\n      }\n    },\n    \n    // 辅助方法: 将TNF值转换为可读字符串\n    getTypeNameFormatString(tnf) {\n      const tnfMap = {\n        0: '空',\n        1: 'NFC论坛类型',\n        2: '媒体类型',\n        3: '绝对URI',\n        4: 'NFC论坛外部类型',\n        5: '未知',\n        6: '不变',\n        7: '保留'\n      };\n      \n      return tnfMap[tnf] || '未知类型';\n    }\n  }\n}\n</script>\n\n<style>\n.container {\n  flex: 1;\n  padding: 20px;\n  background-color: #f8f8f8;\n}\n\n.title {\n  font-size: 24px;\n  font-weight: bold;\n  text-align: center;\n  margin-bottom: 40px;\n  color: #333;\n}\n\n.scan-btn {\n  background-color: #007aff;\n  color: #ffffff;\n  border-radius: 8px;\n  padding: 15px 0;\n  font-size: 18px;\n  margin-bottom: 30px;\n}\n\n.result-area {\n  border-radius: 8px;\n  background-color: #ffffff;\n  padding: 15px;\n  border: 1px solid #e0e0e0;\n  margin-top: 20px;\n}\n\n.result-title {\n  font-size: 18px;\n  font-weight: bold;\n  margin-bottom: 10px;\n  color: #333;\n}\n\n.result-content {\n  height: 300px;\n  padding: 10px;\n  background-color: #f0f0f0;\n  border-radius: 5px;\n}\n</style> ","<template>\n  <app>\n    <page></page>\n  </app>\n</template>\n\n<script lang=\"uts\">\nexport default {\n  onLaunch: function() {\n    uni.__log__('log','at App.uvue:10','App Launch')\n  },\n  onShow: function() {\n    uni.__log__('log','at App.uvue:13','App Show')\n  },\n  onHide: function() {\n    uni.__log__('log','at App.uvue:16','App Hide')\n  }\n}\n</script>\n\n<style>\n/* 全局样式 */\n</style> "],"names":["defineComponent"],"mappings":"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","x_google_ignoreList":[0],"sourceRoot":"/Users/chenyonglin/myCode/gitee/myWork/NFC_Reading"}